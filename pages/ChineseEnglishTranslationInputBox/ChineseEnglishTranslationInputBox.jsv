import CryptoJS from '../../utils/crypto-js'
const app = getApp();
// import  from 'fs1'
let fs = wx.getFileSystemManager()

Page({

  /**
   * 页面的初始数据
   */
  data: {
      focus: false,
      inputValue: ''
  },

  /**
   * 生命周期函数--监听页面加载
   */
  getInputValue(e){
    this.setData({
      inputValue:e.detail
    })
    console.log(e.detail)// {value: "ff", cursor: 2}  
  },
  GoToSubmissionContent:function(){
    console.log(this.data.inputValue.value)
    const config = {
      // 请求地址
      hostUrl: "https://ntrans.xfyun.cn/v2/ots",
      host: "ntrans.xfyun.cn",
      //在控制台-我的应用-机器翻译获取
      appid: "1ba77f8f",
      //在控制台-我的应用-机器翻译获取
      apiSecret: "M2ZkMjBjZGI2MzJiODFmNjQyZTFhM2Q4",
      //在控制台-我的应用-机器翻译获取
      apiKey: "b05def7fe43739e22819a482de468482",
      uri: "/v2/ots"
    }
    let transVar = {
      text: JSON.stringify(this.data.inputValue.value),//待翻译文本
      from: "en",//源语种
      to: "cn"//目标语种
    }
    let date = (new Date().toUTCString())
    let postBody = getPostBody(transVar.text, transVar.from, transVar.to)
    let digest = getDigest(postBody)
    wx.request({
  
      url: config.hostUrl,
      header:{
          'Content-Type': 'application/json',
          'Accept': 'application/json,version=1.0',
          'Host': config.host,
          'Date': date,
          'Digest': digest,
          'Authorization': getAuthStr(date, digest)
  
      },
      method:"POST",
      json: true,
      data: postBody,
      success: function(res) {
        //这里就是请求成功后，进行一些函数操作
        console.log(res)
        console.log(res.data.data.result)
        var ArrayData = JSON.stringify(res.data.data.result);
        console.log(ArrayData)
        wx.navigateTo({
          url: '../ChineseEnglishTranslation/ChineseEnglishTranslation?ArrayData='+ArrayData,
        })
      },
      fail:function(res) {
        console.error(res)
      } 
    })
    function getPostBody(text, from, to) {
      let digestObj = {
      //填充common
        common: {
          app_id: config.appid
        },
      //填充business
        business:{
          from: from,
          to : to
        },
      //填充data
        data:{
          text: CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(text))
        }
      }
      return digestObj
    }
    
    // 请求获取请求体签名
    function getDigest(body) {
      return 'SHA-256=' + CryptoJS.enc.Base64.stringify(CryptoJS.SHA256(JSON.stringify(body)))
    }
    
    // 鉴权签名
    function getAuthStr(date, digest) {
      let signatureOrigin = `host: ${config.host}\ndate: ${date}\nPOST ${config.uri} HTTP/1.1\ndigest: ${digest}`
      let signatureSha = CryptoJS.HmacSHA256(signatureOrigin, config.apiSecret)
      let signature = CryptoJS.enc.Base64.stringify(signatureSha)
      let authorizationOrigin = `api_key="${config.apiKey}", algorithm="hmac-sha256", headers="host date request-line digest", signature="${signature}"`
      return authorizationOrigin
    }
  },
  
  bindKeyInput: function (e) {
    this.setData({
      inputValue: e.detail.value
    })
    console.log(inputValue)

  },
  onLoad: function (options) {

  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
